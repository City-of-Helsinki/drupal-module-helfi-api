<?php

/**
 * @file
 * Contains installation procedure for API base module.
 */

declare(strict_types = 1);

use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 */
function helfi_api_base_install() {
  if (\Drupal::moduleHandler()->moduleExists('filter')) {
    $formatters = \Drupal::entityTypeManager()
      ->getStorage('filter_format')
      ->loadMultiple();

    /** @var \Drupal\filter\Entity\FilterFormat $format */
    foreach ($formatters as $format) {
      $format->setFilterConfig('helfi_link_converter', [
        'status' => 1,
      ])
        ->save();
    }
  }
}

/**
 * Enable 'helfi_link_converter' filter format.
 */
function helfi_api_base_update_9001() : void {
  helfi_api_base_install();
}

/**
 * Install the debug rest config.
 */
function helfi_api_base_update_9002() : void {
  if (!\Drupal::moduleHandler()->moduleExists('rest')) {
    return;
  }
  /** @var \Drupal\Core\Extension\ExtensionPathResolver $extensionPathResolver */
  $extensionPathResolver = \Drupal::service('extension.path.resolver');
  $config_path = $extensionPathResolver->getPath('module', 'helfi_api_base') . '/config/optional';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');

  // Install rest resource config.
  $config_name = 'rest.resource.helfi_debug_data';
  $config_storage->write($config_name, $source->read($config_name));
}

/**
 * Install the package version rest config.
 */
function helfi_api_base_update_9003() : void {
  if (!\Drupal::moduleHandler()->moduleExists('rest')) {
    return;
  }
  $config_path = \Drupal::service('extension.list.module')
    ->getPath('helfi_api_base') . '/config/optional';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');

  $configs = [
    'rest.resource.helfi_debug_package_version',
  ];

  foreach ($configs as $config) {
    $config_storage->write($config, $source->read($config));
  }
}

/**
 * Disable syslog module and enable filelog.
 */
function helfi_api_base_update_9004() : void {
  Drupal::service('module_installer')->uninstall([
    'syslog',
  ]);
  Drupal::service('module_installer')->install([
    'filelog',
  ]);
}

/**
 * Disable filelog module, enable log_stdout module.
 */
function helfi_api_base_update_9005() : void {
  Drupal::service('module_installer')->uninstall([
    'filelog',
  ]);
}

/**
 * Re-run 9005 update.
 */
function helfi_api_base_9006() : void {
  helfi_api_base_update_9005();
}

/**
 * Enable health check.
 */
function helfi_api_base_update_9007() : void {
  if (!Drupal::moduleHandler()->moduleExists('health_check')) {
    Drupal::service('module_installer')->install([
      'health_check',
    ]);
  }
}
