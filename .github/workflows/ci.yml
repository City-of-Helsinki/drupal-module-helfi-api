on:
  pull_request:
  push:
    branches:
      - main
name: CI
env:
  SYMFONY_DEPRECATIONS_HELPER: disabled
  COMPOSER_MIRROR_PATH_REPOS: ''
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.2']
    container:
      image: ghcr.io/city-of-helsinki/drupal-php-docker:${{ matrix.php-versions }}-alpine

    services:
      db:
        image: mysql:8
        env:
          MYSQL_USER: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_DATABASE: drupal
          MYSQL_ROOT_PASSWORD: drupal
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse $MODULE_NAME from composer.json
        run: echo "MODULE_NAME=$(cat composer.json | jq -r .name | awk -F/ '{print $NF}')" >> $GITHUB_ENV

      - name: Set browsertest output directory
        run: echo "BROWSERTEST_OUTPUT_DIRECTORY=sut/sites/simpletest" >> $GITHUB_ENV

      - name: Install required composer dependencies
        working-directory: ${{ env.DRUPAL_ROOT }}
        run: |
          composer install
          wget https://git.drupalcode.org/project/gitlab_templates/-/raw/1.0.x/scripts/symlink_project.php
          _WEB_ROOT=sut php symlink_project.php $MODULE_NAME

      - name: Install Drupal
        working-directory: ${{ env.DRUPAL_ROOT }}
        run: |
          php -d sendmail_path=$(which true); vendor/bin/drush --yes -v site-install minimal --db-url="$SIMPLETEST_DB"
          vendor/bin/drush en $MODULE_NAME -y

      - name: Run PHPCS
        working-directory: ${{ env.DRUPAL_ROOT }}
        run: vendor/bin/phpcs --ignore=*/vendor/*,*/sut/* --standard=Drupal,DrupalPractice --extensions=php,module,install .

      - name: Run phpstan
        working-directory: ${{ env.DRUPAL_ROOT }}
        run: vendor/bin/phpstan analyze -c phpstan.neon .

      - name: Start services
        working-directory: sut
        run: vendor/bin/drush runserver $SIMPLETEST_BASE_URL --dns > /dev/null 2>&1 &

      - name: Run PHPUnit tests
        run: |
          vendor/bin/phpunit \
            -c $GITHUB_WORKSPACE/tests/phpunit.xml \
            --coverage-clover=coverage.xml \
            tests/

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Create an artifact from test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results-${{ matrix.php-versions }}
          path: sut/sites/simpletest/browser_output/
          retention-days: 1
