<?php

/**
 * @file
 * Contains installation procedure for API base module.
 */

declare(strict_types = 1);

use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 */
function helfi_api_base_install() {
  if (!\Drupal::moduleHandler()->moduleExists('filter')) {
    return;
  }

  $formatters = \Drupal::entityTypeManager()
    ->getStorage('filter_format')
    ->loadMultiple();

  /** @var \Drupal\filter\Entity\FilterFormat $format */
  foreach ($formatters as $format) {
    $format->setFilterConfig('helfi_link_converter', [
      'status' => 1,
    ])
      ->save();
  }
}

/**
 * Enable 'helfi_link_converter' filter format.
 */
function helfi_api_base_update_9001() : void {
  helfi_api_base_install();
}

/**
 * Install the debug rest config.
 */
function helfi_api_base_update_9002() : void {
  if (!\Drupal::moduleHandler()->moduleExists('rest')) {
    return;
  }
  /** @var \Drupal\Core\Extension\ExtensionPathResolver $extensionPathResolver */
  $extensionPathResolver = \Drupal::service('extension.path.resolver');
  $config_path = $extensionPathResolver->getPath('module', 'helfi_api_base') . '/config/optional';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');

  // Install rest resource config.
  $config_name = 'rest.resource.helfi_debug_data';
  $config_storage->write($config_name, $source->read($config_name));
}
